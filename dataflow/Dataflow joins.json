{
	"name": "Dataflow joins",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Dataflow_employee",
						"type": "DatasetReference"
					},
					"name": "employee"
				},
				{
					"dataset": {
						"referenceName": "Dataflow_department",
						"type": "DatasetReference"
					},
					"name": "Department"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sinkset",
						"type": "DatasetReference"
					},
					"name": "OP"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Employee Id} as integer '000',",
				"          Name as string,",
				"          {Tenure in months} as string,",
				"          {Department Id} as integer '000'",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employee",
				"source(output(",
				"          {Department _Id} as integer '000',",
				"          {Department Name} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Department",
				"employee, Department join({Department Id} == {Department _Id},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Joins'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          {Employee Id},",
				"          Name,",
				"          {Department Id},",
				"          {Department Name}",
				"     ),",
				"     partitionBy('hash', 1)) ~> OP"
			]
		}
	}
}